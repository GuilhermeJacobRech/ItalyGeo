// <auto-generated />
using System;
using ItalyGeo.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ItalyGeo.API.Migrations
{
    [DbContext(typeof(ItalyGeoDbContext))]
    [Migration("20241004214202_FirstMigration")]
    partial class FirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ItalyGeo.API.Models.Domain.Capaluogo", b =>
                {
                    b.Property<Guid>("ComuneId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProvinceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ComuneId", "ProvinceId", "RegionId");

                    b.ToTable("Capaluogo");
                });

            modelBuilder.Entity("ItalyGeo.API.Models.Domain.Comune", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(12, 9)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(12, 9)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProvinceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WikipediaPagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProvinceId");

                    b.HasIndex("WikipediaPagePath")
                        .IsUnique();

                    b.ToTable("Comunes");
                });

            modelBuilder.Entity("ItalyGeo.API.Models.Domain.Province", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Acronym")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Areakm2")
                        .HasColumnType("real");

                    b.Property<long>("ComuneCount")
                        .HasColumnType("bigint");

                    b.Property<float>("InhabitantsPerKm2")
                        .HasColumnType("real");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(12, 9)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(12, 9)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Population")
                        .HasColumnType("bigint");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WikipediaPagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("yearCreated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.HasIndex("WikipediaPagePath")
                        .IsUnique();

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("ItalyGeo.API.Models.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Areakm2")
                        .HasColumnType("real");

                    b.Property<long>("ComuneCount")
                        .HasColumnType("bigint");

                    b.Property<float>("InhabitantsPerKm2")
                        .HasColumnType("real");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(12, 9)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(12, 9)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Population")
                        .HasColumnType("bigint");

                    b.Property<long>("ProvinceCount")
                        .HasColumnType("bigint");

                    b.Property<string>("WikipediaPagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("WikipediaPagePath")
                        .IsUnique();

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("ItalyGeo.API.Models.Domain.Comune", b =>
                {
                    b.HasOne("ItalyGeo.API.Models.Domain.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("ItalyGeo.API.Models.Domain.Province", b =>
                {
                    b.HasOne("ItalyGeo.API.Models.Domain.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");
                });
#pragma warning restore 612, 618
        }
    }
}
